package gestion;

import modele.Enfant;

/**
 * Classe GestionnaireIncompatibilité
 * Gère les incompatibilités pour les activités des enfants en fonction
 * de leurs allergies et conditions médicales.
 */
public class GestionnaireIncompatibilité {
    private String[][] incompatibilitesActivites; // Tableau des incompatibilités
    private String[][] activitesParCategorie; // Tableau des catégories et activités
    private static final int MAX_ACTIVITES = 50;
    private static final int MAX_CATEGORIES = 10;
    private int indexIncompatibilites = 0;
    private int indexCategories = 0;

    public GestionnaireIncompatibilité() {
        this.incompatibilitesActivites = new String[MAX_ACTIVITES][];
        this.activitesParCategorie = new String[MAX_CATEGORIES][];
        initialiserCategoriesActivites();
    }

    private void initialiserCategoriesActivites() {
        ajouterActivitesCategorie("Activités Culinaires", new String[]{
            "Gâteau aux pommes", "Cookie aux chocolats", "Cupcakes aux fraises", "Hamburger maison", "Pizza végétarienne"
        });
        ajouterActivitesCategorie("Activités Récréatives", new String[]{
            "Peinture avec les doigts", "Jeux d'eau sensoriels", "Parcours motricité", "Conte interactif", "Atelier pâte à modeler"
        });
        ajouterActivitesCategorie("Sorties en Forêt et Aquatiques", new String[]{
            "Chasse aux trésors nature", "Construction cabane miniature", "Comptine en plein air", "Parcours sensoriels",
            "Observation animaux et insectes", "Bébé nageur"
        });
    }

    public void ajouterActivitesCategorie(String categorie, String[] activites) {
        if (indexCategories < MAX_CATEGORIES) {
            activitesParCategorie[indexCategories] = new String[activites.length + 1];
            activitesParCategorie[indexCategories][0] = categorie;
            System.arraycopy(activites, 0, activitesParCategorie[indexCategories], 1, activites.length);
            indexCategories++;
        }
    }

    public void ajouterIncompatibilites(String activite, String[] incompatibilites) {
        if (indexIncompatibilites < MAX_ACTIVITES) {
            incompatibilitesActivites[indexIncompatibilites] = new String[incompatibilites.length + 1];
            incompatibilitesActivites[indexIncompatibilites][0] = activite;
            System.arraycopy(incompatibilites, 0, incompatibilitesActivites[indexIncompatibilites], 1, incompatibilites.length);
            indexIncompatibilites++;
        }
    }

    public boolean estCompatible(String activite, Enfant enfant) {
        for (int i = 0; i < indexIncompatibilites; i++) {
            if (incompatibilitesActivites[i][0].equals(activite)) {
                for (int j = 1; j < incompatibilitesActivites[i].length; j++) {
                    if (contient(enfant.getAllergies(), incompatibilitesActivites[i][j]) ||
                        contient(enfant.getProblemesDeSante(), incompatibilitesActivites[i][j])) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

    public String[] getActivitesParCategorie(String categorie) {
        for (int i = 0; i < indexCategories; i++) {
            if (activitesParCategorie[i][0].equals(categorie)) {
                String[] activites = new String[activitesParCategorie[i].length - 1];
                System.arraycopy(activitesParCategorie[i], 1, activites, 0, activites.length);
                return activites;
            }
        }
        return new String[0];
    }

    private boolean contient(String[] tableau, String valeur) {
        for (String element : tableau) {
            if (element != null && element.equals(valeur)) {
                return true;
            }
        }
        return false;
    }
}
