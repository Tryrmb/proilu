package ihm;

import gestion.DataStorage;
import modele.Enfant;
import modele.Parent;

import javax.swing.*;
import java.awt.*;
import java.util.Scanner;

public class MenuParentIU extends JFrame {
    private Parent parent;
    private Scanner scanner;

    public MenuParentIU(String email, DataStorage dataStorage) {
        this.parent = dataStorage.trouverParentParEmail(email);
        this.scanner = new Scanner(System.in);

        if (parent == null) {
            JOptionPane.showMessageDialog(this, "Erreur : Parent introuvable.");
            dispose();
            return;
        }

        afficherMenuParent();
    }

    private void afficherMenuParent() {
        int choix;

        do {
            System.out.println("\n--- Menu Parent ---");
            System.out.println("1) Voir les activités des enfants");
            System.out.println("2) Voir les informations santé des enfants");
            System.out.println("3) Voir les bilans");
            System.out.println("0) Retour au menu principal");
            System.out.print("Votre choix : ");
            choix = scanner.nextInt();
            scanner.nextLine(); // Consommer la ligne restante

            switch (choix) {
                case 1:
                    afficherActivitesEnfants();
                    break;
                case 2:
                    afficherSanteEnfants();
                    break;
                case 3:
                    afficherBilansEnfants();
                    break;
                case 0:
                    System.out.println("Retour au menu principal.");
                    break;
                default:
                    System.out.println("Choix invalide, veuillez réessayer.");
            }
        } while (choix != 0);
    }

    private void afficherActivitesEnfants() {
        System.out.println("\n--- Activités des enfants ---");
        Enfant[] enfants = parent.getEnfants();
        if (enfants == null || enfants.length == 0) {
            System.out.println("Aucun enfant enregistré.");
            return;
        }

        for (Enfant enfant : enfants) {
            if (enfant != null) {
                System.out.println("Enfant : " + enfant.getNom());
                String[] activites = enfant.getActivites();
                if (activites == null || activites.length == 0) {
                    System.out.println(" - Aucune activité enregistrée.");
                } else {
                    for (String activite : activites) {
                        if (activite != null) {
                            System.out.println(" - Activité : " + activite);
                        }
                    }
                }
            }
        }
    }

    private void afficherSanteEnfants() {
        System.out.println("\n--- Informations santé des enfants ---");
        Enfant[] enfants = parent.getEnfants();
        if (enfants == null || enfants.length == 0) {
            System.out.println("Aucun enfant enregistré.");
            return;
        }

        for (Enfant enfant : enfants) {
            if (enfant != null) {
                System.out.println("Enfant : " + enfant.getNom());
                System.out.print(" - Allergies : ");
                String[] allergies = enfant.getAllergies();
                if (allergies == null || allergies.length == 0) {
                    System.out.println("Aucune");
                } else {
                    System.out.println(String.join(", ", allergies));
                }
                System.out.println(" - Régime alimentaire : " + enfant.getRegimeAlimentaire());
            }
        }
    }

    private void afficherBilansEnfants() {
        System.out.println("\n--- Bilans des enfants ---");
        Enfant[] enfants = parent.getEnfants();
        if (enfants == null || enfants.length == 0) {
            System.out.println("Aucun enfant enregistré.");
            return;
        }

        for (Enfant enfant : enfants) {
            if (enfant != null) {
                System.out.println("Enfant : " + enfant.getNom());
                String bilan = enfant.getBilan();
                System.out.println(" - Bilan : " + (bilan == null || bilan.isEmpty() ? "Non disponible" : bilan));
            }
        }
    }
}
