!SESSION 2025-01-02 22:05:28.493 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data C:\Users\tahir\Documents\ILU2\workspace\ProjetILU -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2025-01-02 22:05:53.476
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2025-01-02 22:05:54.425
!MESSAGE Logback config file: C:\Users\tahir\Documents\ILU2\workspace\ProjetILU\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2025-01-02 22:05:56.792
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2025-01-02 22:05:56.792
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2025-01-02 22:06:03.868
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tahir'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-02 22:06:04.796
!MESSAGE Internal Error.
!STACK 0
de.yatta.eclipse.launcher.communication.HttpTypedException: HTTP 400
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponseStatus(RequestTemplate.java:499)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponse(RequestTemplate.java:428)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate$TemplateResponseHandler.handleResponse(RequestTemplate.java:592)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:91)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2025-01-02 22:06:05.308
!MESSAGE Can't open directory channel. Log directory fsync won't be performed.

!ENTRY org.eclipse.jdt.ui 4 10001 2025-01-02 22:10:35.341
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Core Exception [code 275] A resource exists with a different case: '/Projet/src/modele'.
	at org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(JavaModelOperation.java:304)
	at org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation(CreatePackageFragmentOperation.java:93)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:813)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(PackageFragmentRoot.java:321)
	at org.eclipse.jdt.internal.corext.refactoring.changes.CreatePackageChange.perform(CreatePackageChange.java:59)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.performChange(ChangeCorrectionProposal.java:179)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.apply(ChangeCorrectionProposal.java:109)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
Caused by: java.lang.Exception: A resource exists with a different case: '/Projet/src/modele'.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:355)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:333)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:40)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:101)
	at org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(JavaModelOperation.java:298)
	... 40 more
Caused by: org.eclipse.core.internal.resources.ResourceException(/Projet/src/modele)[275]: java.lang.Exception: A resource exists with a different case: '/Projet/src/modele'.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:355)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:333)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:40)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:101)
	at org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(JavaModelOperation.java:298)
	at org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation(CreatePackageFragmentOperation.java:93)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:813)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(PackageFragmentRoot.java:321)
	at org.eclipse.jdt.internal.corext.refactoring.changes.CreatePackageChange.perform(CreatePackageChange.java:59)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.performChange(ChangeCorrectionProposal.java:179)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.apply(ChangeCorrectionProposal.java:109)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
!SUBENTRY 1 org.eclipse.core.resources 4 275 2025-01-02 22:10:35.343
!MESSAGE A resource exists with a different case: '/Projet/src/modele'.
!STACK 0
java.lang.Exception: A resource exists with a different case: '/Projet/src/modele'.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:355)
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:333)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:40)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:101)
	at org.eclipse.jdt.internal.core.JavaModelOperation.createFolder(JavaModelOperation.java:298)
	at org.eclipse.jdt.internal.core.CreatePackageFragmentOperation.executeOperation(CreatePackageFragmentOperation.java:93)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:813)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.createPackageFragment(PackageFragmentRoot.java:321)
	at org.eclipse.jdt.internal.corext.refactoring.changes.CreatePackageChange.perform(CreatePackageChange.java:59)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.performChange(ChangeCorrectionProposal.java:179)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.apply(ChangeCorrectionProposal.java:109)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-03 19:03:46.492
!MESSAGE Could not receive a valid response for solution feature de.yatta.feature.emf from the license server.
!STACK 0
java.net.UnknownHostException: Hôte inconnu (platform.yatta.de)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.fluent.Request.internalExecute(Request.java:173)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:262)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-03 19:03:46.505
!MESSAGE Could not receive a valid response for solution feature de.yatta.feature.roundtrip from the license server.
!STACK 0
java.net.NoRouteToHostException: No route to host: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:368)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.fluent.Request.internalExecute(Request.java:173)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:262)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-03 19:03:46.548
!MESSAGE Could not receive a valid response for solution feature de.yatta.feature.corediagrams from the license server.
!STACK 0
java.net.UnknownHostException: platform.yatta.de
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.apache.http.client.fluent.Request.internalExecute(Request.java:173)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:262)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.equinox.p2.repository 2 0 2025-01-04 15:01:06.584
!MESSAGE Unexpected interrupt while waiting on ECF browse request
!STACK 0
java.lang.InterruptedException
	at java.base/java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.jobs.Semaphore.acquire(Semaphore.java:45)
	at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:995)
	at org.eclipse.core.internal.jobs.InternalJob.join(InternalJob.java:355)
	at org.eclipse.core.runtime.jobs.Job.join(Job.java:531)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileInfoReader.waitOnSelf(FileInfoReader.java:74)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileInfoReader.getRemoteFiles(FileInfoReader.java:110)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileInfoReader.getRemoteFile(FileInfoReader.java:125)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileInfoReader.getLastModified(FileInfoReader.java:130)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.getLastModified(RepositoryTransport.java:275)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.delegateGetLastModified(CachingTransport.java:427)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.getLastModified(CachingTransport.java:364)
	at org.eclipse.equinox.internal.p2.repository.CacheManager.getLastModified(CacheManager.java:278)
	at org.eclipse.equinox.internal.p2.repository.CacheManager.createCache(CacheManager.java:195)
	at org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepositoryFactory.getLocalFile(SimpleArtifactRepositoryFactory.java:68)
	at org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepositoryFactory.load(SimpleArtifactRepositoryFactory.java:92)
	at org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepositoryFactory.load(SimpleArtifactRepositoryFactory.java:80)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.factoryLoad(ArtifactRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:791)
	at jdk.internal.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:119)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:448)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:231)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Artifact.loadRepository(CachingRepositoryManager.java:587)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:131)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:125)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.load(CompositeArtifactRepository.java:476)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.addChild(CompositeArtifactRepository.java:157)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.<init>(CompositeArtifactRepository.java:79)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepositoryFactory.load(CompositeArtifactRepositoryFactory.java:120)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.factoryLoad(ArtifactRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:791)
	at jdk.internal.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:119)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:448)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:231)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Artifact.loadRepository(CachingRepositoryManager.java:587)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:131)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:125)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.load(CompositeArtifactRepository.java:476)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.addChild(CompositeArtifactRepository.java:157)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.<init>(CompositeArtifactRepository.java:79)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepositoryFactory.load(CompositeArtifactRepositoryFactory.java:120)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.factoryLoad(ArtifactRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:791)
	at jdk.internal.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:119)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:448)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:231)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Artifact.loadRepository(CachingRepositoryManager.java:587)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:131)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:125)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.load(CompositeArtifactRepository.java:476)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.addChild(CompositeArtifactRepository.java:157)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository.<init>(CompositeArtifactRepository.java:79)
	at org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepositoryFactory.load(CompositeArtifactRepositoryFactory.java:120)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.factoryLoad(ArtifactRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:791)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:119)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:448)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:231)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Artifact.loadRepository(CachingRepositoryManager.java:587)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:131)
	at org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager.loadRepository(ArtifactRepositoryManager.java:125)
	at org.eclipse.epp.internal.mpc.ui.catalog.MarketplaceCatalog.lambda$12(MarketplaceCatalog.java:338)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
!SESSION 2025-01-04 15:19:26.717 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data file:/C:/Users/tahir/Documents/ILU2/workspace/ProjetILU/ -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 4 0 2025-01-04 15:21:29.333
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: ch.qos.logback.classic [7]
  Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
  Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
  Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.apache.aries.spifly.dynamic.bundle 4 0 2025-01-04 15:21:29.334
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.apache.aries.spifly.dynamic.bundle [41]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper 4 0 2025-01-04 15:21:31.131
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper [186]
  Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
    -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
       org.mortbay.jasper.apache-jsp [815]
         Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
         Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
  Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
    -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper.registry 4 0 2025-01-04 15:21:31.139
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper.registry [187]
  Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
    -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
       org.eclipse.equinox.jsp.jasper [186]
         Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
           -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
              org.mortbay.jasper.apache-jsp [815]
                Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
           -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.help.webapp 4 0 2025-01-04 15:21:31.167
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.help.webapp [229]
  Unresolved requirement: Require-Bundle: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.0.100"
    -> Bundle-SymbolicName: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.2.200.v20231012-1239"
       org.eclipse.equinox.jsp.jasper.registry [187]
         Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
           -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
              org.eclipse.equinox.jsp.jasper [186]
                Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
                  -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
                     org.mortbay.jasper.apache-jsp [815]
                       Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
                  -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.core 4 0 2025-01-04 15:21:31.209
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.core [280]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.ui 4 0 2025-01-04 15:21:31.258
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.ui [281]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.apt.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.apt.core; bundle-version="2.2.200.20231119-0901"; singleton:="true"
       org.eclipse.m2e.apt.core [280]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject 4 0 2025-01-04 15:21:31.295
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject [286]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
       org.eclipse.m2e.sourcelookup [304]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject.ui 4 0 2025-01-04 15:21:31.328
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject.ui [287]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core 4 0 2025-01-04 15:21:31.356
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core [288]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core.ui 4 0 2025-01-04 15:21:31.395
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core.ui [289]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.catalog [282]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
    -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.maven-artifact-transfer [285]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.descriptor [284]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.discovery 4 0 2025-01-04 15:21:31.428
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.discovery [290]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
    -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.editor 4 0 2025-01-04 15:21:31.465
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.editor [291]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.discovery; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.discovery; bundle-version="2.0.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.discovery [290]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
           -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt 4 0 2025-01-04 15:21:31.495
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt [293]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt.ui 4 0 2025-01-04 15:21:31.553
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt.ui [294]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.launching 4 0 2025-01-04 15:21:31.589
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.launching [295]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.core 4 0 2025-01-04 15:21:31.616
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.core [300]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.ui 4 0 2025-01-04 15:21:31.647
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.ui [301]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.profiles.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.profiles.core; bundle-version="2.1.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.profiles.core [300]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.refactoring 4 0 2025-01-04 15:21:31.681
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.refactoring [302]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup 4 0 2025-01-04 15:21:31.705
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup [304]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup.ui 4 0 2025-01-04 15:21:31.730
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup.ui [305]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="1.7.36"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; osgi.identity="org.objectweb.asm"; type="osgi.bundle"; version:Version="9.7.1"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.jface 2 0 2025-01-04 15:21:35.767
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2025-01-04 15:21:35.767
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2025-01-04 15:21:49.962
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tahir'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2025-01-04 15:21:50.016
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.m2e.core.views.MavenRepositoryView" id and the "Maven Repositories" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2025-01-04 15:21:50.017
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.m2e.core.views.MavenLifecycleMappingsView" id and the "Maven Lifecycle Mappings" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2025-01-04 15:21:50.017
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.m2e.core.views.MavenBuild" id and the "Maven Workspace Build" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-04 15:21:50.862
!MESSAGE Internal Error.
!STACK 0
de.yatta.eclipse.launcher.communication.HttpTypedException: HTTP 400
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponseStatus(RequestTemplate.java:499)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponse(RequestTemplate.java:428)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate$TemplateResponseHandler.handleResponse(RequestTemplate.java:592)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:91)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2025-01-05 09:23:11.223 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 4 0 2025-01-05 09:23:11.949
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: ch.qos.logback.classic [7]
  Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
  Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
  Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.apache.aries.spifly.dynamic.bundle 4 0 2025-01-05 09:23:11.950
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.apache.aries.spifly.dynamic.bundle [41]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper 4 0 2025-01-05 09:23:14.343
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper [186]
  Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
    -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
       org.mortbay.jasper.apache-jsp [815]
         Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
         Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
  Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
    -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper.registry 4 0 2025-01-05 09:23:14.350
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper.registry [187]
  Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
    -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
       org.eclipse.equinox.jsp.jasper [186]
         Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
           -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
              org.mortbay.jasper.apache-jsp [815]
                Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
           -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.help.webapp 4 0 2025-01-05 09:23:14.857
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.help.webapp [229]
  Unresolved requirement: Require-Bundle: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.0.100"
    -> Bundle-SymbolicName: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.2.200.v20231012-1239"
       org.eclipse.equinox.jsp.jasper.registry [187]
         Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
           -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
              org.eclipse.equinox.jsp.jasper [186]
                Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
                  -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
                     org.mortbay.jasper.apache-jsp [815]
                       Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
                  -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.core 4 0 2025-01-05 09:23:14.896
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.core [280]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.ui 4 0 2025-01-05 09:23:14.924
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.ui [281]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.apt.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.apt.core; bundle-version="2.2.200.20231119-0901"; singleton:="true"
       org.eclipse.m2e.apt.core [280]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject 4 0 2025-01-05 09:23:14.953
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject [286]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
       org.eclipse.m2e.sourcelookup [304]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject.ui 4 0 2025-01-05 09:23:14.974
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject.ui [287]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                     org.eclipse.m2e.core [288]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core 4 0 2025-01-05 09:23:14.990
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core [288]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core.ui 4 0 2025-01-05 09:23:15.007
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core.ui [289]
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
       org.eclipse.m2e.archetype.catalog [282]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                            slf4j.api [825]
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                   org.apache.aries.spifly.dynamic.bundle [41]
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                                -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                                   ch.qos.logback.classic [7]
                                     Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                                     Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                                     Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                                     Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                       -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                                     Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                       -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                                     Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                       -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                                     Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                       -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                                     Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                       -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                     Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                       -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
    -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.maven-artifact-transfer [285]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.descriptor [284]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.discovery 4 0 2025-01-05 09:23:15.028
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.discovery [290]
  Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
    -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.editor 4 0 2025-01-05 09:23:15.057
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.editor [291]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.discovery; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.discovery; bundle-version="2.0.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.discovery [290]
         Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
           -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt 4 0 2025-01-05 09:23:15.073
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt [293]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt.ui 4 0 2025-01-05 09:23:15.093
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt.ui [294]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.launching 4 0 2025-01-05 09:23:15.114
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.launching [295]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                            org.eclipse.m2e.maven.runtime [297]
                              Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                                   slf4j.api [825]
                                     Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                                       -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                          org.apache.aries.spifly.dynamic.bundle [41]
                                     Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                                       -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                                          ch.qos.logback.classic [7]
                                            Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                                            Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                                            Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                                            Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                                            Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                              -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                                            Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                                            Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                                            Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                              -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                            Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.core 4 0 2025-01-05 09:23:15.130
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.core [300]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.ui 4 0 2025-01-05 09:23:15.148
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.ui [301]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.profiles.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.profiles.core; bundle-version="2.1.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.profiles.core [300]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.refactoring 4 0 2025-01-05 09:23:15.177
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.refactoring [302]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup 4 0 2025-01-05 09:23:15.197
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup [304]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup.ui 4 0 2025-01-05 09:23:15.218
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup.ui [305]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
                     org.eclipse.m2e.archetype.common [283]
                       Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                         -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                            org.eclipse.m2e.maven.runtime [297]
                              Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                                   slf4j.api [825]
                                     Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                                       -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                          org.apache.aries.spifly.dynamic.bundle [41]
                                     Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                                       -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                                          ch.qos.logback.classic [7]
                                            Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                                            Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                                            Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                                            Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                                            Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                              -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                                            Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                                            Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                                            Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                              -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                                            Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                              -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.jface 2 0 2025-01-05 09:23:31.451
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2025-01-05 09:23:31.451
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2025-01-05 09:23:45.183
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tahir'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-05 09:23:46.349
!MESSAGE Internal Error.
!STACK 0
de.yatta.eclipse.launcher.communication.HttpTypedException: HTTP 400
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponseStatus(RequestTemplate.java:499)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponse(RequestTemplate.java:428)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate$TemplateResponseHandler.handleResponse(RequestTemplate.java:592)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:91)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2025-01-05 10:28:05.284 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data C:\Users\tahir\Documents\ILU2\workspace\ProjetILU -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 4 0 2025-01-05 10:28:05.880
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: ch.qos.logback.classic [7]
  Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
  Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
  Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
  Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
    -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
  Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
    -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.apache.aries.spifly.dynamic.bundle 4 0 2025-01-05 10:28:05.882
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.apache.aries.spifly.dynamic.bundle [41]
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1788)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper 4 0 2025-01-05 10:28:06.366
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper [186]
  Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
    -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
       org.mortbay.jasper.apache-jsp [815]
         Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
         Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
  Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
    -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.equinox.jsp.jasper.registry 4 0 2025-01-05 10:28:06.373
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.equinox.jsp.jasper.registry [187]
  Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
    -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
       org.eclipse.equinox.jsp.jasper [186]
         Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
           -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
              org.mortbay.jasper.apache-jsp [815]
                Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
           -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.help.webapp 4 0 2025-01-05 10:28:06.400
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.help.webapp [229]
  Unresolved requirement: Require-Bundle: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.0.100"
    -> Bundle-SymbolicName: org.eclipse.equinox.jsp.jasper.registry; bundle-version="1.2.200.v20231012-1239"
       org.eclipse.equinox.jsp.jasper.registry [187]
         Unresolved requirement: Import-Package: org.eclipse.equinox.jsp.jasper
           -> Export-Package: org.eclipse.equinox.jsp.jasper; bundle-symbolic-name="org.eclipse.equinox.jsp.jasper"; bundle-version="1.1.800.v20231012-1238"; version="1.0.0"
              org.eclipse.equinox.jsp.jasper [186]
                Unresolved requirement: Import-Package: javax.servlet.jsp; version="[2.0.0,3.0.0)"
                  -> Export-Package: javax.servlet.jsp; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="2.3.0"
                     org.mortbay.jasper.apache-jsp [815]
                       Unresolved requirement: Import-Package: org.apache.tomcat.util.descriptor; version="9.0.14"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; filter:="(osgi.serviceloader=org.apache.juli.logging.Log)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Import-Package: org.apache.jasper.servlet; version="[9.0.0,10.0.0)"
                  -> Export-Package: org.apache.jasper.servlet; bundle-symbolic-name="org.mortbay.jasper.apache-jsp"; bundle-version="9.0.96"; version="9.0.96"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.core 4 0 2025-01-05 10:28:06.432
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.core [280]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.apt.ui 4 0 2025-01-05 10:28:06.464
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.apt.ui [281]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.apt.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.apt.core; bundle-version="2.2.200.20231119-0901"; singleton:="true"
       org.eclipse.m2e.apt.core [280]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject 4 0 2025-01-05 10:28:06.493
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject [286]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
       org.eclipse.m2e.sourcelookup [304]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.binaryproject.ui 4 0 2025-01-05 10:28:06.519
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.binaryproject.ui [287]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core 4 0 2025-01-05 10:28:06.538
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core [288]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.core.ui 4 0 2025-01-05 10:28:06.557
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.core.ui [289]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
       org.eclipse.m2e.archetype.common [283]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.catalog [282]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.descriptor [284]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
    -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
       org.eclipse.m2e.archetype.maven-artifact-transfer [285]
         Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
  Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
    -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.discovery 4 0 2025-01-05 10:28:06.581
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.discovery [290]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
    -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.editor 4 0 2025-01-05 10:28:06.601
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.editor [291]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.discovery; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.discovery; bundle-version="2.0.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.discovery [290]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.plugin; provider="m2e"
           -> Export-Package: org.apache.maven.plugin; bundle-symbolic-name="org.eclipse.m2e.maven.runtime"; bundle-version="3.9.500.20231113-2345"; provider="m2e"; version="0.0.0"; mandatory:="provider"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt 4 0 2025-01-05 10:28:06.625
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt [293]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.jdt.ui 4 0 2025-01-05 10:28:06.642
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.jdt.ui [294]
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
       slf4j.api [825]
         Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
           -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
              org.apache.aries.spifly.dynamic.bundle [41]
         Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
           -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
              ch.qos.logback.classic [7]
                Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                  -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
       org.eclipse.m2e.maven.runtime [297]
         Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
         Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
       org.eclipse.m2e.jdt [293]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.launching 4 0 2025-01-05 10:28:06.661
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.launching [295]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.core 4 0 2025-01-05 10:28:06.679
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.core [300]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.profiles.ui 4 0 2025-01-05 10:28:06.701
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.profiles.ui [301]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.profiles.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.profiles.core; bundle-version="2.1.201.20231030-1438"; singleton:="true"
       org.eclipse.m2e.profiles.core [300]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.refactoring 4 0 2025-01-05 10:28:06.723
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.refactoring [302]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup 4 0 2025-01-05 10:28:06.731
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup [304]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core [288]
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
              slf4j.api [825]
                Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                  -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                     org.apache.aries.spifly.dynamic.bundle [41]
                Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                  -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                     ch.qos.logback.classic [7]
                       Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                         -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
              org.eclipse.m2e.maven.runtime [297]
                Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.m2e.sourcelookup.ui 4 0 2025-01-05 10:28:06.744
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.m2e.sourcelookup.ui [305]
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core.ui; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core.ui; bundle-version="2.0.7.20231119-0901"; singleton:="true"
       org.eclipse.m2e.core.ui [289]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
              org.eclipse.m2e.core [288]
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                     slf4j.api [825]
                       Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"
                         -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                            org.apache.aries.spifly.dynamic.bundle [41]
                       Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; filter:="(osgi.serviceloader=org.slf4j.spi.SLF4JServiceProvider)"
                         -> Provide-Capability: osgi.serviceloader; osgi.serviceloader="org.slf4j.spi.SLF4JServiceProvider"; register:="ch.qos.logback.classic.spi.LogbackServiceProvider"
                            ch.qos.logback.classic [7]
                              Unresolved requirement: Import-Package: jakarta.servlet; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Import-Package: jakarta.servlet.http; version="[5.0.0,6.0.0)"; resolution:="optional"
                              Unresolved requirement: Require-Capability: osgi.serviceloader; osgi.serviceloader="ch.qos.logback.classic.spi.Configurator"; filter:="(osgi.serviceloader=ch.qos.logback.classic.spi.Configurator)"; resolution:="optional"; cardinality:="multiple"
                              Unresolved requirement: Import-Package: org.slf4j.spi; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                              Unresolved requirement: Import-Package: org.slf4j; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.processor)(version>=1.0.0)(!(version>=2.0.0)))"; resolution:="optional"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.processor"; version:Version="1.0.0"; uses:="org.apache.aries.spifly"
                              Unresolved requirement: Require-Capability: osgi.extender; filter:="(&(osgi.extender=osgi.serviceloader.registrar)(version>=1.0.0)(!(version>=2.0.0)))"
                                -> Provide-Capability: osgi.extender; osgi.extender="osgi.serviceloader.registrar"; version:Version="1.0.0"
                              Unresolved requirement: Import-Package: org.slf4j.helpers; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                              Unresolved requirement: Import-Package: org.slf4j.event; version="[2.0.0,3.0.0)"
                                -> Export-Package: org.slf4j.event; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.helpers"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                     org.eclipse.m2e.maven.runtime [297]
                       Unresolved requirement: Import-Package: org.slf4j.helpers; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.helpers; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.spi"
                       Unresolved requirement: Import-Package: org.slf4j.spi; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j.spi; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j,org.slf4j.event,org.slf4j.helpers"
                       Unresolved requirement: Import-Package: org.slf4j; version="[1.7.31,3.0.0)"
                         -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.common; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.common; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.common.util,org.apache.maven.archetype.exception,org.apache.maven.archetype.old,org.apache.maven.archetype.old.descriptor,org.jdom2"
              org.eclipse.m2e.archetype.common [283]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.0,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.source; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.source; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.exception; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.exception; bundle-symbolic-name="org.eclipse.m2e.archetype.common"; bundle-version="3.2.104"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.catalog [282]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.metadata; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.metadata; bundle-symbolic-name="org.eclipse.m2e.archetype.descriptor"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.descriptor [284]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.shared.transfer.artifact; provider="m2e"; version="[0.13.1,1.0.0)"
           -> Export-Package: org.apache.maven.shared.transfer.artifact; bundle-symbolic-name="org.eclipse.m2e.archetype.maven-artifact-transfer"; bundle-version="0.13.1.2"; provider="m2e"; version="0.13.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"
              org.eclipse.m2e.archetype.maven-artifact-transfer [285]
                Unresolved requirement: Fragment-Host: org.eclipse.m2e.archetype.common; bundle-version="[3.2.104,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.archetype.common; bundle-version="3.2.104"
         Unresolved requirement: Import-Package: org.apache.maven.archetype.catalog.io.xpp3; provider="m2e"; version="[3.2.1,4.0.0)"
           -> Export-Package: org.apache.maven.archetype.catalog.io.xpp3; bundle-symbolic-name="org.eclipse.m2e.archetype.catalog"; bundle-version="3.2.1.2"; provider="m2e"; version="3.2.1"; x-friends:="org.eclipse.m2e.core.ui"; mandatory:="provider"; uses:="org.apache.maven.archetype.catalog"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
  Unresolved requirement: Require-Bundle: org.eclipse.m2e.binaryproject; bundle-version="[2.0.0,3.0.0)"
    -> Bundle-SymbolicName: org.eclipse.m2e.binaryproject; bundle-version="2.1.202.20231119-0901"; singleton:="true"
       org.eclipse.m2e.binaryproject [286]
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.sourcelookup; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.sourcelookup; bundle-version="2.0.301.20231030-1438"; singleton:="true"
              org.eclipse.m2e.sourcelookup [304]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.jdt; bundle-version="[2.0.0,3.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.jdt; bundle-version="2.3.3.20231119-0901"; singleton:="true"
              org.eclipse.m2e.jdt [293]
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
                Unresolved requirement: Import-Package: org.slf4j; version="[1.7.0,3.0.0)"
                  -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="2.0.16"; version="2.0.16"; uses:="org.slf4j.event,org.slf4j.helpers,org.slf4j.spi"
                Unresolved requirement: Require-Bundle: org.eclipse.m2e.core; bundle-version="[2.0.0,3.0.0)"
                  -> Bundle-SymbolicName: org.eclipse.m2e.core; bundle-version="2.4.1.20231119-0901"; singleton:="true"
         Unresolved requirement: Require-Bundle: org.eclipse.m2e.maven.runtime; bundle-version="[3.8.6,4.0.0)"
           -> Bundle-SymbolicName: org.eclipse.m2e.maven.runtime; bundle-version="3.9.500.20231113-2345"
  Bundle was not resolved because of a uses constraint violation.
  org.apache.felix.resolver.reason.ReasonException: Uses constraint violation. Unable to resolve resource org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"] because it is exposed to package 'org.objectweb.asm' from resources org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"] and org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"] via two dependency chains.

Chain 1:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.7.1"; osgi.identity="org.objectweb.asm"]

Chain 2:
  org.apache.aries.spifly.dynamic.bundle [osgi.identity; type="osgi.bundle"; version:Version="1.3.7"; osgi.identity="org.apache.aries.spifly.dynamic.bundle"]
    import: (&(osgi.wiring.package=org.objectweb.asm.commons)(&(version>=9.6.0)(!(version>=10.0.0))))
     |
    export: osgi.wiring.package=org.objectweb.asm.commons; uses:=org.objectweb.asm
  org.objectweb.asm.commons [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm.commons"]
    import: (&(osgi.wiring.package=org.objectweb.asm)(version>=9.6.0))
     |
    export: osgi.wiring.package: org.objectweb.asm
  org.objectweb.asm [osgi.identity; type="osgi.bundle"; version:Version="9.6.0"; osgi.identity="org.objectweb.asm"]
	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1852)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1845)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1786)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1750)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1672)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.jface 2 0 2025-01-05 10:28:09.093
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2025-01-05 10:28:09.093
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2025-01-05 10:28:15.126
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tahir'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY de.yatta.platform.marketplace.licensing.client 2 0 2025-01-05 10:28:16.185
!MESSAGE Internal Error.
!STACK 0
de.yatta.eclipse.launcher.communication.HttpTypedException: HTTP 400
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponseStatus(RequestTemplate.java:499)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.handleResponse(RequestTemplate.java:428)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate$TemplateResponseHandler.handleResponse(RequestTemplate.java:592)
	at org.apache.http.client.fluent.Response.handleResponse(Response.java:91)
	at de.yatta.eclipse.launcher.communication.utils.RequestTemplate.execute(RequestTemplate.java:201)
	at de.yatta.platform.marketplace.licensing.client.LicensingClient$1.run(LicensingClient.java:503)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.junit.core 4 0 2025-01-05 10:38:24.817
!MESSAGE Unable to compute bundle location for 'org.hamcrest' with range [2.2.0,2.3.0)
!STACK 0
java.lang.IllegalStateException: Unable to compute bundle location for 'org.hamcrest' with range [2.2.0,2.3.0)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport$JUnitPluginDescription.getLibraryEntry(BuildPathSupport.java:236)
	at org.eclipse.jdt.internal.junit.buildpath.BuildPathSupport.getHamcrestLibraryEntry(BuildPathSupport.java:435)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.getNewContainer(JUnitContainerInitializer.java:147)
	at org.eclipse.jdt.internal.junit.buildpath.JUnitContainerInitializer.initialize(JUnitContainerInitializer.java:108)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:3216)
	at org.eclipse.jdt.internal.core.JavaModelManager$10.run(JavaModelManager.java:3100)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2453)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2478)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:3162)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:2159)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3829)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3263)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:3186)
	at org.eclipse.jdt.internal.core.ClasspathEntry.validateClasspath(ClasspathEntry.java:1898)
	at org.eclipse.jdt.core.JavaConventions.validateClasspath(JavaConventions.java:801)
	at org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange.newChange(ClasspathChange.java:64)
	at org.eclipse.jdt.ui.text.java.ClasspathFixProcessor$ClasspathFixProposal.newClasspathChange(ClasspathFixProcessor.java:60)
	at org.eclipse.jdt.internal.junit.ui.JUnitClasspathFixProcessor$JUnitClasspathFixProposal.createChange(JUnitClasspathFixProcessor.java:118)
	at org.eclipse.jdt.internal.junit.ui.JUnitQuickFixProcessor$JUnitClasspathFixCorrectionProposal.createChange(JUnitQuickFixProcessor.java:252)
	at org.eclipse.jdt.internal.junit.ui.JUnitQuickFixProcessor$JUnitClasspathFixCorrectionProposal.lambda$0(JUnitQuickFixProcessor.java:270)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2348)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2345)
	at org.eclipse.jdt.internal.junit.ui.JUnitQuickFixProcessor$JUnitClasspathFixCorrectionProposal.apply(JUnitQuickFixProcessor.java:268)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:1004)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:951)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.widgetDefaultSelected(CompletionProposalPopup.java:697)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:123)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4273)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:648)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:342)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:555)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:173)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:208)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:651)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:588)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1459)
